webpackJsonp([8],{44:function(n,s){n.exports={date:"2017-04-14T10:59:07.000Z",content:'<p>When youâ€™re using FunBook with Webpack, you can benifit from the module system and using external markdown file as chapter content:</p>\n<pre><code class="language-js"><span class="token comment" spellcheck="true">// webpack.config.js</span>\n<span class="token comment" spellcheck="true">// yarn add post-loader --dev</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n      test<span class="token punctuation">:</span> <span class="token regex">/\\.md$/</span><span class="token punctuation">,</span>\n      loader<span class="token punctuation">:</span> <span class="token string">\'post-loader\'</span><span class="token punctuation">,</span>\n      options<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// options for markdown-it</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>Then in your FunBook app:</p>\n<pre><code class="language-js"><span class="token comment" spellcheck="true">// ... code</span>\n\nbook<span class="token punctuation">.</span><span class="token function">chapter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  title<span class="token punctuation">:</span> <span class="token string">\'Intro\'</span><span class="token punctuation">,</span>\n  content<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./intro.md\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre>\n<p>Bascially this loader transform markdown string to <code>{ content: \'html string..\' }</code> shape.</p>\n<p>And async loading works too:</p>\n<pre><code class="language-js">book<span class="token punctuation">.</span><span class="token function">chapter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  title<span class="token punctuation">:</span> <span class="token string">\'Intro\'</span><span class="token punctuation">,</span>\n  content<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">\'./intro.md\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre>\n'}}});
//# sourceMappingURL=8.f590e80e.js.map